{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./res/web-dist.ts","webpack:///./src/langSupportUtils.ts","webpack:///./src/languageSupport.ts","webpack:///./src/languages.ts"],"names":[],"mappings":"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","file":"mmir-plugin-speech-nuance-lang.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./res/web-dist.ts\");\n","\r\nimport * as languageSupport from '../src/languageSupport';\r\nimport * as languages from '../src/languages';\r\n\r\nexport {\r\n  languageSupport,\r\n  languages\r\n}\r\n","\r\n// import { asrLanguages as asrLanguageList , ttsLanguages as ttsLanguageList } from './languages';\r\nimport { VoiceDetails } from 'mmir-lib';\r\n\r\n// const genderType = {\r\n// \t'F': 'female',\t//map: list-entry -> type\r\n// \t'M': 'male',\t//map: list-entry -> type\r\n// \t'female': 'F',\t//map: type -> list-entry\r\n// \t'male': 'M'\t\t//map: type -> list-entry\r\n// }\r\n\r\nexport type GenderParseFunc = (gender: string) => 'female' | 'male';\r\n\r\nexport type Gender = \"female\" | \"male\";\r\nexport type VoiceResult = {voice: VoiceDetails, language: string, filter: string};\r\n\r\n\r\n/**\r\n * normalize language code, optionally including separator & country-code:\r\n *  * language code to lower case\r\n *  * use '-' as separator\r\n *  * country code to upper case\r\n *\r\n * @param  {string} code [description]\r\n * @return {string} normalized language (and country) code\r\n */\r\nexport function normalizeCode(code: string): string {\r\n  return code.replace(/^([^_-]+)(-|_)?(\\w+)?$/, (_match, lang, sep, country) => {\r\n    return (lang? lang.toLowerCase() : '') + (sep? '-' : '') + (country? country.toUpperCase() : '');\r\n  });\r\n}\r\n\r\nexport interface LanguageSupportIndex {\r\n\r\n  //[0] Language, [1]\t6 char *, [2]\tVoice, [3]\tM / F\r\n  ttsLabel: number|string;\r\n  ttsCode: number|string;\r\n  ttsName: number|string;\r\n  ttsGender: number|string;\r\n\r\n  //\t[0] Language, [1]\t6 char *, [2]\tFrequency\r\n  asrLabel: number|string;\r\n  asrCode: number|string;\r\n}\r\n\r\nexport type LanguageResourceEntry = string[] | {[field: string]: string};\r\n\r\nexport class LanguageSupport {\r\n\r\n  ttsLabel: number|string;\r\n  ttsCode: number|string;\r\n  ttsName: number|string;\r\n  ttsGender: number|string;\r\n\r\n  asrLabel: number|string;\r\n  asrCode: number|string;\r\n\r\n  hasLabel: boolean = false;\r\n\r\n  readonly voiceSelectFilter: (voiceName: string) => string;\r\n\r\n\tconstructor(\r\n\t\tpublic asrLanguages: LanguageResourceEntry[],\r\n\t\tpublic ttsLanguages: LanguageResourceEntry[],\r\n\t\tpublic parseGender: GenderParseFunc,\r\n    listIndices: LanguageSupportIndex,\r\n    voiceSelectFilter?: (voiceName: string) => string\r\n\t){\r\n    for(const n in listIndices){\r\n      if(n === 'ttsLabel' && typeof listIndices[n] !== 'undefined'){\r\n        this.hasLabel = true;\r\n      }\r\n      this[n] = listIndices[n];\r\n    }\r\n    this.voiceSelectFilter = voiceSelectFilter? voiceSelectFilter : (s: string) => s;\r\n  }\r\n\r\n\tttsProjection: {[type: string]: (entry: LanguageResourceEntry, index?: number, list?: LanguageResourceEntry[]) => string|VoiceDetails} = {\r\n\t\t'code': (item: LanguageResourceEntry, _index: number, _list: LanguageResourceEntry[]): string => {\r\n\t\t\treturn item[this.ttsCode];\r\n\t\t},\r\n\t\t'label': (item: LanguageResourceEntry, _index: number, _list: LanguageResourceEntry[]): string => {\r\n\t\t\treturn item[this.ttsLabel];\r\n\t\t},\r\n\t\t'voice': (item: LanguageResourceEntry, _index: number, _list: LanguageResourceEntry[]): VoiceDetails => {\r\n      return {\r\n\t\t\t\tname: item[this.ttsName],\r\n        // label: this.hasLabel? item[this.ttsLabel] : item[this.ttsName], //TODO?\r\n\t\t\t\tlanguage: item[this.ttsCode],\r\n\t\t\t\tgender: this.parseGender( item[this.ttsGender] )\r\n\t\t\t}\r\n\t\t},\r\n\t\t'voiceName': (item: LanguageResourceEntry, _index: number, _list: LanguageResourceEntry[]): string => {\r\n\t\t\treturn item[this.ttsName];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param type {\"code\" | \"label\" | \"voice\" | \"voiceName\"}\r\n\t * \t\t\t\t\ttype of returned list: language code, language name, voice information, voice-name\r\n\t * @param [langCode] {String} OPTIONAL\r\n\t * \t\t\t\tif present for  \"voice\" or \"voiceName\", only voices with matching language code will be returned\r\n\t * \t\t\t\tFormat: ISO3 language-code (lower-case) and optional ISO3 country-code (upper case), e.g. \"eng-USA\", \"spa_ESP\", \"deu\"\r\n\t * @param [gender] {Gender} OPTIONAL\r\n\t * \t\t\t\tif present for  \"voice\" or \"voiceName\", only voices with matching gender will be returned\r\n\t *\r\n\t * @returns {VoiceInfo} list of strings, depending on type parameter; in case of \"voice\" a list of voice-objects:\r\n\t * \t\t\t\t{name: STRING, language: STRING, gender: Gender}\r\n\t */\r\n\tgetTTS(type: \"code\" | \"label\" | \"voice\" | \"voiceName\", langCode?: string, gender?: Gender): (string | VoiceDetails)[] {\r\n\r\n\t\tconst isVoiceQuery = type === 'voice' || type === 'voiceName';\r\n\t\tlet list = isVoiceQuery? this.ttsLanguages : this.ttsLanguages.filter((item, index, array) => {\r\n\t\t\tif(index === 0 || array[index - 1][this.ttsCode] !== item[this.ttsCode]){\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tif(langCode && isVoiceQuery){\r\n\r\n\t\t\t//allow - and _ as separator:\r\n\t\t\tconst re = new RegExp('^' + normalizeCode(langCode) + '\\\\b');\r\n\r\n\t\t\tlist = list.filter(item => {\r\n\t\t\t\tif(re.test(item[this.ttsCode])){\r\n\t\t\t\t\treturn !gender || gender === this.parseGender( item[this.ttsGender] )? true : false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn list.map(this.ttsProjection[type]);\r\n\t}\r\n\r\n\tasrProjection: {[type: string]: (entry: LanguageResourceEntry, index?: number, list?: LanguageResourceEntry[]) => string}  = {\r\n\t\t'code': (item: LanguageResourceEntry, _index: number, _list: LanguageResourceEntry[]): string => {\r\n\t\t\treturn item[this.asrCode];\r\n\t\t},\r\n\t\t'label': (item: LanguageResourceEntry, _index: number, _list: LanguageResourceEntry[]): string => {\r\n\t\t\treturn item[this.asrLabel];\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param type \"code\" | \"label\"\r\n\t * \t\t\t\t\ttype of returned list: language code, language name\r\n\t *\r\n\t * @returns {Array<string>} list of strings of language codes or names\r\n\t */\r\n\tgetASR(type: \"code\" | \"label\"): string[] {\r\n\t\treturn this.asrLanguages.map(this.asrProjection[type]);\r\n\t}\r\n\r\n\t/**\r\n\t * create sorting function for selecting a \"best\" voice:\r\n\t *\r\n\t *  1. if filter is given: prioritize voices that have the same gender as specified by the filter\r\n\t *  2. voices that match the country-code of langCode (if langCode includes a country-code)\r\n\t *  3. name of the voice\r\n\t *\r\n\t *  the first entry in the list will be the best match.\r\n\t *\r\n\t *  NOTE 1: the sorter assumes that the ISO3 language code is the same for all voices in the list.\r\n\t *\r\n\t *  NOTE 2: the sorter prioritizes gender (if specified) over country-code, so the selected voice may\r\n\t *          have a different accent, if no voice with the specified gender exists for that country-code.\r\n\t *\r\n\t *  @param langCode {String}\r\n\t *  \t\t\tan ISO3 language code (lower case), optionally with ISO3 country code (upper case)\r\n\t *  @param [filter] {Gender} OPTIONAL\r\n\t *  \t\t\tthe (preferred) gender for the voice\r\n\t *\r\n\t *  @returns {Function} a sorting function that can be used with Array.sort()\r\n\t */\r\n\tcreateBestVoiceSort(langCode: string, filter?: Gender): (v1: VoiceDetails, v2: VoiceDetails) => number {\r\n\r\n\t\tlangCode = normalizeCode(langCode);\r\n\t\tvar hasCountry = /^\\w+-\\w+$/.test(langCode);\r\n\r\n\t\treturn (v1, v2) => {\r\n\r\n\t\t\tif(filter && v1.gender !== v2.gender){\r\n\t\t\t\tif(v1.gender === filter){\r\n\t\t\t\t\treturn  -1;\r\n\t\t\t\t} else if(v2.gender === filter){\r\n\t\t\t\t\treturn 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(v1.language !== v2.language){\r\n\r\n\t\t\t\tif(hasCountry){\r\n\t\t\t\t\tif(v1.language === langCode){\r\n\t\t\t\t\t\treturn -1;\r\n\t\t\t\t\t} else if(v2.language === langCode){\r\n\t\t\t\t\t\treturn 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn v1.language.localeCompare(v2.language);\r\n\t\t\t}\r\n\r\n\t\t\treturn v1.name.localeCompare(v2.name);\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * cached result of last invocation of getBestVoice()\r\n\t *\r\n\t * @type {voice: Voice, language: String, filter: String}\r\n\t *\r\n\t * @field voice {name: STRING, language: STRING, gender: Gender}\r\n\t * \t\t\t\tthe voice that was selected, when getBestVoice() was (successfully) called last time\r\n\t * @field language {String} the language code that was specified when selecting voice as \"best voice\":\r\n\t *                          the ISO3 language code (lower case), optionally with ISO3 country code (upper case)\r\n\t * @field [filter] {String} the filter/gender that was specified when selecting voice as \"best voice\":\r\n\t *                          Gender\r\n\t */\r\n\tprotected _lastBestVoice: VoiceResult = null;\r\n\r\n\t/**\r\n\t * cached result of last invocation of ttsSelectVoiceFor()\r\n\t *\r\n\t * @type {voice: Voice, language: String, filter: String}\r\n\t *\r\n\t * @field voice {name: STRING, language: STRING, gender: Gender}\r\n\t * \t\t\t\tthe voice that was selected, when getBestVoice() was (successfully) called last time\r\n\t * @field language {String} the language code that was specified when selecting voice as \"best voice\":\r\n\t *                          the ISO3 language code (lower case), optionally with ISO3 country code (upper case)\r\n\t * @field [filter] {String} the filter/gender that was specified when selecting voice as \"best voice\":\r\n\t *                          Gender\r\n\t */\r\n\tprotected _lastSelectedVoice: VoiceResult = null;\r\n\r\n\t/**\r\n\t * get \"best\" matching voice for a language:\r\n\t * will try to select a voice with the specified gender (if specified) and country-code (if specified).\r\n\t *\r\n\t * If no matching voice (for specified gender and/or country-code) can be found, a voice that matches\r\n\t * the language-code will be returned.\r\n\t *\r\n\t * I.e. the function will always return a voice, as long as the language does have any voice; if the\r\n\t * language is not supported, NULL is returned.\r\n\t *\r\n\t *\r\n\t * NOTE: if gender and country-code are specified, the gender-specification is prioritized, i.e. the returned\r\n\t *       voice may have a different country-code.\r\n\t *\r\n\t *  @param langCode {String}\r\n\t *  \t\t\tan ISO3 language code (lower case), optionally with ISO3 country code (upper case)\r\n\t *  @param [filter] {Gender} OPTIONAL\r\n\t *  \t\t\tthe (preferred) gender for the voice\r\n\t *\r\n\t *  @returns {VoiceResult} the best matching voice as {voice: {name: STRING, language: STRING, gender: Gender}, language: <language param>, filter: <filter param>}\r\n\t *           or NULL, if not voice could be found for that language\r\n\t */\r\n\tgetBestVoice(langCode: string, gender?: Gender): VoiceResult {\r\n\r\n\t  //normalize FALSY values for gender query:\r\n\t  gender = gender || void(0);\r\n\r\n\t\tif(this._lastBestVoice && this._lastBestVoice.language === langCode && this._lastBestVoice.filter === gender){\r\n\t    // console.log('  ######## using cached _lastBestVoice ', _lastBestVoice);\r\n\t\t\treturn this._lastBestVoice;\r\n\t\t}\r\n\t  // console.log('-----------------------------\\nno match for cached _lastBestVoice ', _lastBestVoice);\r\n\r\n\t\tconst langParts = langCode.split(/[-_]/);\r\n\t\tconst lang = langParts[0];\r\n\r\n\t\tconst list = this.getTTS('voice', lang) as VoiceDetails[];\r\n\r\n\t\tif(list.length > 0){\r\n\t\t\tlist.sort(this.createBestVoiceSort(langCode, gender));\r\n\t\t\tthis._lastBestVoice = {\r\n\t\t\t\tvoice: list[0],\r\n\t\t\t\tlanguage: langCode,\r\n\t\t\t\tfilter: gender\r\n\t\t\t};\r\n\t\t\treturn this._lastBestVoice;\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\t/**\r\n\t * select a voice by its name or by filter (gender) and language-code\r\n\t *\r\n\t * @param  {string} langCode the language-code (may include a country-code); NOTE if a voice-name matches, the langCode is ignored!\r\n\t * @param  {string} query the voice name or filter-query; if FALSY the first matching voice for langCode will be used\r\n\t * @return {Voice} the voice matching the query (may be a \"best match\", i.e. not exactly match the query)\r\n\t */\r\n\tttsSelectVoiceFor(langCode: string, query?: Gender | string): VoiceDetails {\r\n\r\n\t  //normalize FALSY values for query & langCode:\r\n\t  query = query || void(0);\r\n\t  langCode = langCode || '';\r\n\r\n\t  if(this._lastSelectedVoice && this._lastSelectedVoice.language === langCode && this._lastSelectedVoice.filter === query){\r\n\t    // console.log('  ######## using cached _lastSelectedVoice ', _lastSelectedVoice);\r\n\t    return this._lastSelectedVoice.voice;\r\n\t  }\r\n\t  // console.log('-----------------------------\\nno match for cached _lastSelectedVoice ', _lastSelectedVoice);\r\n\r\n\t  //1. try to get voice by name:\r\n\t  const re = new RegExp('^' + query + '$', 'i');\r\n\t  const voiceEntry = this.ttsLanguages.find((voiceData: string[]) => {\r\n      const name = voiceData[this.ttsName];\r\n\t    if(re.test(name) || re.test(this.voiceSelectFilter(name))){\r\n\t      return true;\r\n\t    }\r\n\t    return false;\r\n\t  });\r\n\r\n\t\tlet voice: VoiceDetails;\r\n\t  if(voiceEntry){\r\n\t    voice = this.ttsProjection.voice(voiceEntry) as VoiceDetails;\r\n\t  } else{\r\n\t    //2. get best matching voice for langCode & query\r\n\t    const bestMatch = this.getBestVoice(langCode, query as Gender);\r\n\t    if(bestMatch){\r\n\t      voice = bestMatch.voice;\r\n\t    }\r\n\t  }\r\n\r\n\t  if(voice){\r\n\t    this._lastSelectedVoice = {\r\n\t      voice: voice,\r\n\t      language: langCode,\r\n\t      filter: query\r\n\t    };\r\n\t  }\r\n\r\n\t  return voice;\r\n\t}\r\n}\r\n\r\n// export function ttsLanguages (){ return getTTS('code');};\r\n// export function ttsVoices(langCode?: string, gender?: Gender): VoiceDetails[] { return getTTS('voice', langCode, gender) as VoiceDetails[];};\r\n// export function ttsVoiceNames(langCode?: string, gender?: Gender): string[] { return getTTS('voiceName', langCode, gender) as string[];};\r\n// export const ttsBestVoiceFor = getBestVoice;\r\n// export function asrLanguages(): string [] { return getASR('code');};\r\n// export const ttsSelectVoice = ttsSelectVoiceFor;\r\n","\r\n// var languages = require('./languages');\r\n//\r\n// /**\r\n//  * TTS languages & voices:\r\n//  * list of arrays, where an array in the list contains\r\n//  * <pre>\r\n//  * [0] Language, [1]\t6 char *, [2]\tVoice, [3]\tM / F\r\n//  * </pre>\r\n//  * @type Array<Array<string>>\r\n//  */\r\n// var ttsLanguages = languages.ttsLanguages;\r\n//\r\n// /**\r\n//  * ASR languages:\r\n//  * list of arrays, where an array in the list contains\r\n//  * <pre>\r\n//  * [0] Language, [1]\t6 char *, [2]\tFrequency\r\n//  * </pre>\r\n//  * @type Array<Array<string>>\r\n//  */\r\n// var asrLanguages = languages.asrLanguages;\r\n\r\nimport { asrLanguages as asrLanguageList , ttsLanguages as ttsLanguageList } from './languages';\r\nimport { LanguageSupport, Gender, VoiceResult } from './langSupportUtils';\r\nimport { VoiceDetails } from 'mmir-lib';\r\n\r\nconst genderType = {\r\n\t'F': 'female',\t//map: list-entry -> type\r\n\t'M': 'male',\t//map: list-entry -> type\r\n};\r\n\r\nconst nuanceLangSupport = new LanguageSupport(\r\n\tasrLanguageList,\r\n\tttsLanguageList,\r\n\tfunction parseGender(gender: string): Gender {\r\n\t\treturn genderType[gender];\r\n\t}, {\r\n\t  //[0] Language, [1]\t6 char *, [2]\tVoice, [3]\tM / F\r\n\t  ttsLabel: 0,\r\n\t  ttsCode: 1,\r\n\t  ttsName: 2,\r\n\t  ttsGender: 3,\r\n\t  //\t[0] Language, [1]\t6 char *, [2]\tFrequency\r\n\t  asrLabel: 0,\r\n\t  asrCode: 1\r\n\t},\r\n\tfunction selectVoiceFilter(voiceName: string): string {\r\n\t\treturn voiceName.replace(/-ML$/, '');\r\n\t}\r\n);\r\n\r\nexport function ttsLanguages(): string[] { return nuanceLangSupport.getTTS('code') as string[];};\r\nexport function ttsVoices(langCode?: string, gender?: Gender): VoiceDetails[] { return nuanceLangSupport.getTTS('voice', langCode, gender) as VoiceDetails[];};\r\nexport function ttsVoiceNames(langCode?: string, gender?: Gender): string[] { return nuanceLangSupport.getTTS('voiceName', langCode, gender) as string[];};\r\nexport function ttsBestVoiceFor(langCode: string, gender?: Gender): VoiceResult { return nuanceLangSupport.getBestVoice(langCode, gender);};\r\nexport function asrLanguages(): string [] { return nuanceLangSupport.getASR('code');};\r\nexport function ttsSelectVoice(langCode: string, query?: Gender | string): VoiceDetails { return nuanceLangSupport.ttsSelectVoiceFor(langCode, query); };\r\n","\n//from https://developer.nuance.com/public/index.php?task=supportedLanguages\n//state: 2019-01\n\n/**\n * [0] Language, [1]\t6 char *, [2]\tVoice, [3]\tM / F\n */\nconst ttsLanguages = [\n//[0] Language, [1]\t6 char *, [2]\tVoice, [3]\tM / F\n [\"Arabic\", \"ara-XWW\", \"Laila\", \"F\"],\n [\"Arabic\", \"ara-XWW\", \"Maged\", \"M\"],\n [\"Arabic\", \"ara-XWW\", \"Tarik\", \"M\"],\n [\"Bahasa (Indonesia)\", \"ind-IDN\", \"Damayanti\", \"F\"],\n [\"Basque\", \"baq-ESP\", \"Miren\", \"F\"],\n [\"Cantonese\", \"yue-CHN\", \"Sin-Ji\", \"F\"],\n [\"Catalan\", \"cat-ESP\", \"Jordi\", \"M\"],\n [\"Catalan\", \"cat-ESP\", \"Montserrat\", \"F\"],\n [\"Czech\", \"ces-CZE\", \"Iveta\", \"F\"],\n [\"Czech\", \"ces-CZE\", \"Zuzana\", \"F\"],\n [\"Danish\", \"dan-DNK\", \"Ida\", \"F\"],\n [\"Danish\", \"dan-DNK\", \"Magnus\", \"M\"],\n [\"Dutch\", \"nld-NLD\", \"Claire\", \"F\"],\n [\"Dutch\", \"nld-NLD\", \"Xander\", \"M\"],\n [\"Dutch (Belgium)\", \"nld-BEL\", \"Ellen\", \"F\"],\n [\"English (Australia)\", \"eng-AUS\", \"Karen\", \"F\"],\n [\"English (Australia)\", \"eng-AUS\", \"Lee\", \"M\"],\n [\"English (GB)\", \"eng-GBR\", \"Kate\", \"F\"],\n [\"English (GB)\", \"eng-GBR\", \"Serena\", \"F\"],\n [\"English (GB)\", \"eng-GBR\", \"Daniel\", \"M\"],\n [\"English (GB)\", \"eng-GBR\", \"Oliver\", \"M\"],\n [\"English (India)\", \"eng-IND\", \"Veena\", \"F\"],\n [\"English (Ireland)\", \"eng-IRL\", \"Moira\", \"F\"],\n [\"English (Scotland)\", \"eng-SCT\", \"Fiona\", \"F\"],\n [\"English (South Africa)\", \"eng-ZAF\", \"Tessa\", \"F\"],\n [\"English (US)\", \"eng-USA\", \"Ava\", \"F\"],\n [\"English (US)\", \"eng-USA\", \"Allison\", \"F\"],\n [\"English (US)\", \"eng-USA\", \"Samantha\", \"F\"],\n [\"English (US)\", \"eng-USA\", \"Susan\", \"F\"],\n [\"English (US)\", \"eng-USA\", \"Zoe\", \"F\"],\n [\"English (US)\", \"eng-USA\", \"Tom\", \"M\"],\n [\"Finnish\", \"fin-FIN\", \"Satu\", \"F\"],\n [\"French\", \"fra-FRA\", \"Audrey-ML\", \"F\"],\n [\"French\", \"fra-FRA\", \"Thomas\", \"M\"],\n [\"French\", \"fra-FRA\", \"Aurelie\", \"F\"],\n [\"French (Canada)\", \"fra-CAN\", \"Amelie\", \"F\"],\n [\"French (Canada)\", \"fra-CAN\", \"Chantal\", \"F\"],\n [\"French (Canada)\", \"fra-CAN\", \"Nicolas\", \"M\"],\n [\"Galician\", \"glg-ESP\", \"Carmela\", \"F\"],\n [\"German\", \"deu-DEU\", \"Anna-ML\", \"F\"],\n [\"German\", \"deu-DEU\", \"Petra-ML\", \"F\"],\n [\"German\", \"deu-DEU\", \"Markus\", \"M\"],\n [\"German\", \"deu-DEU\", \"Yannick\", \"M\"],\n [\"Greek\", \"ell-GRC\", \"Melina\", \"F\"],\n [\"Greek\", \"ell-GRC\", \"Nikos\", \"M\"],\n [\"Hebrew\", \"heb-ISR\", \"Carmit\", \"F\"],\n [\"Hindi\", \"hin-IND\", \"Lekha\", \"F\"],\n [\"Hungarian\", \"hun-HUN\", \"Mariska\", \"F\"],\n [\"Italian\", \"ita-ITA\", \"Alice-ML\", \"F\"],\n [\"Italian\", \"ita-ITA\", \"Federica\", \"F\"],\n [\"Italian\", \"ita-ITA\", \"Paola\", \"F\"],\n [\"Italian\", \"ita-ITA\", \"Luca\", \"M\"],\n [\"Japanese\", \"jpn-JPN\", \"Kyoko\", \"F\"],\n [\"Japanese\", \"jpn-JPN\", \"Otoya\", \"M\"],\n [\"Korean\", \"kor-KOR\", \"Sora\", \"F\"],\n [\"Mandarin (China)\", \"cmn-CHN\", \"Tian-Tian\", \"F\"],\n [\"Mandarin (Taiwan)\", \"cmn-TWN\", \"Mei-Jia\", \"F\"],\n [\"Norwegian\", \"nor-NOR\", \"Nora\", \"F\"],\n [\"Norwegian\", \"nor-NOR\", \"Henrik\", \"M\"],\n [\"Polish\", \"pol-POL\", \"Ewa\", \"F\"],\n [\"Polish\", \"pol-POL\", \"Zosia\", \"F\"],\n [\"Portuguese (Brazil)\", \"por-BRA\", \"Luciana\", \"F\"],\n [\"Portuguese (Brazil)\", \"por-BRA\", \"Felipe\", \"M\"],\n [\"Portuguese (Portugal)\", \"por-PRT\", \"Catarina\", \"F\"],\n [\"Portuguese (Portugal)\", \"por-PRT\", \"Joana\", \"F\"],\n [\"Romanian\", \"ron-ROU\", \"Ioana\", \"F\"],\n [\"Russian\", \"rus-RUS\", \"Katya\", \"F\"],\n [\"Russian\", \"rus-RUS\", \"Milena\", \"F\"],\n [\"Russian\", \"rus-RUS\", \"Yuri\", \"M\"],\n [\"Slovak\", \"slk-SVK\", \"Laura\", \"F\"],\n [\"Spanish (Castilian)\", \"spa-ESP\", \"Monica\", \"F\"],\n [\"Spanish (Castilian)\", \"spa-ESP\", \"Jorge\", \"M\"],\n [\"Spanish (Columbia)\", \"spa-COL\", \"Soledad\", \"F\"],\n [\"Spanish (Columbia)\", \"spa-COL\", \"Carlos\", \"M\"],\n [\"Spanish (Mexico)\", \"spa-MEX\", \"Angelica\", \"F\"],\n [\"Spanish (Mexico)\", \"spa-MEX\", \"Paulina\", \"F\"],\n [\"Spanish (Mexico)\", \"spa-MEX\", \"Juan\", \"M\"],\n [\"Swedish\", \"swe-SWE\", \"Alva\", \"F\"],\n [\"Swedish\", \"swe-SWE\", \"Oskar\", \"M\"],\n [\"Thai\", \"tha-THA\", \"Kanya\", \"F\"],\n [\"Turkish\", \"tur-TUR\", \"Cem\", \"M\"],\n [\"Turkish\", \"tur-TUR\", \"Yelda\", \"F\"],\n [\"Valencian\", \"spa-ESP\", \"Empar\", \"F\"]\n];\n\n/**\n * [0] Language, [1]\t6 char *, [2]\tFrequency\n */\nconst asrLanguages = [\n//\t[0] Language, [1]\t6 char *, [2]\tFrequency\n\t[\"Arabic (Egypt)\", \"ara-EGY\", \"8 kHz, 16 kHz\"],\n\t[\"Arabic (Saudi Arabia)\", \"ara-SAU\", \"8 kHz, 16 kHz\"],\n\t[\"Arabic (International)\", \"ara-XWW\", \"8 kHz, 16 kHz\"],\n\t[\"Bahasa (Indonesia)\", \"ind-IDN\", \"8 kHz, 16 kHz\"],\n\t[\"Cantonese (Simplified)\", \"yue-CHN\", \"8 kHz, 16 kHz\"],\n\t[\"Catalan\", \"cat-ESP\", \"8 kHz, 16 kHz\"],\n\t[\"Croatian \", \"hrv-HRV\", \"8 kHz, 16 kHz\"],\n\t[\"Czech\", \"ces-CZE\", \"8 kHz, 16 kHz\"],\n\t[\"Danish\", \"dan-DNK\", \"8 kHz, 16 kHz\"],\n\t[\"Dutch\", \"nld-NLD\", \"8 kHz, 16 kHz\"],\n\t[\"English (Australia)*\", \"eng-AUS\", \"8 kHz, 16 kHz\"],\n\t[\"English (GB)*\", \"eng-GBR\", \"8 kHz, 16 kHz\"],\n\t[\"English (US)*\", \"eng-USA\", \"8 kHz, 16 kHz\"],\n\t[\"English (India) \", \"eng-IND\", \"8 kHz, 16 kHz\"],\n\t[\"Finnish\", \"fin-FIN\", \"8 kHz, 16 kHz\"],\n\t[\"French (Canada)\", \"fra-CAN\", \"8 kHz, 16 kHz\"],\n\t[\"French (France)*\", \"fra-FRA\", \"8 kHz, 16 kHz\"],\n\t[\"German*\", \"deu-DEU\", \"8 kHz, 16 kHz\"],\n\t[\"Greek\", \"ell-GRC\", \"8 kHz, 16 kHz\"],\n\t[\"Hebrew\", \"heb-ISR\", \"8 kHz, 16 kHz\"],\n\t[\"Hindi\", \"hin-IND\", \"8 kHz, 16 kHz\"],\n\t[\"Hungarian\", \"hun-HUN\", \"8 kHz, 16 kHz\"],\n\t[\"Italian\", \"ita-ITA\", \"8 kHz, 16 kHz\"],\n\t[\"Japanese\", \"jpn-JPN\", \"8 kHz, 16 kHz\"],\n\t[\"Korean\", \"kor-KOR\", \"8 kHz, 16 kHz\"],\n\t[\"Malay\", \"zlm-MYS\", \"8 kHz, 16 kHz\"],\n\t[\"Mandarin (China/Simplified)\", \"cmn-CHN\", \"8 kHz, 16 kHz\"],\n\t[\"Mandarin (Taiwan/Traditional)\", \"cmn-TWN\", \"8 kHz, 16 kHz\"],\n\t[\"Norwegian\", \"nor-NOR\", \"8 kHz, 16 kHz\"],\n\t[\"Polish\", \"pol-POL\", \"8 kHz, 16 kHz\"],\n\t[\"Portuguese (Brazil)\", \"por-BRA\", \"8 kHz, 16 kHz\"],\n\t[\"Portuguese (Portugal)\", \"por-PRT\", \"8 kHz, 16 kHz\"],\n\t[\"Romanian\", \"ron-ROU\", \"8 kHz, 16 kHz\"],\n\t[\"Russian\", \"rus-RUS\", \"8 kHz, 16 kHz\"],\n\t[\"Slovak\", \"slk-SVK\", \"8 kHz, 16 kHz\"],\n\t[\"Spanish (Spain)\", \"spa-ESP\", \"8 kHz, 16 kHz\"],\n\t[\"Spanish (LatAm)\", \"spa-XLA\", \"8 kHz, 16 kHz\"],\n\t[\"Swedish\", \"swe-SWE\", \"8 kHz, 16 kHz\"],\n\t[\"Thai\", \"tha-THA\", \"8 kHz, 16 kHz\"],\n\t[\"Turkish\", \"tur-TUR\", \"8 kHz, 16 kHz\"],\n\t[\"Ukrainian\", \"ukr-UKR\", \"8 kHz, 16 kHz\"],\n\t[\"Vietnamese\", \"vie-VNM\", \"8 kHz, 16 kHz\"]\n];\n\n\nexport {\n\t/**\n\t * ASR languages:\n\t * list of arrays, where an array in the list contains\n\t * <pre>\n\t * [0] Language, [1]\t6 char *, [2]\tFrequency\n\t * </pre>\n\t * @type Array<Array<string>>\n\t */\n\tasrLanguages,\n    /**\n     * TTS languages & voices:\n     * list of arrays, where an array in the list contains\n     * <pre>\n     * [0] Language, [1]\t6 char *, [2]\tVoice, [3]\tM / F\n     * </pre>\n     * @type Array<Array<string>>\n     */\n\tttsLanguages\n};\n"],"sourceRoot":""}